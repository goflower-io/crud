
package views

import "fmt"
import 	"{{.RelativePath}}/api"
import "github.com/goflower-io/golib/net/http/ui"
import "github.com/goflower-io/golib/net/http"
import "net/url"


{{ $pkgName := .PackageName}}
{{ $tableName := .GoTableName}}
{{ $protopkg := .Protopkg}}

templ {{.GoTableName}}Shell() {
 @Index(){
<div>
			{ children... }
	</div>
 }
}

templ {{.GoTableName}}ListPage(resp *api.List{{.GoTableName}}sResp,path string, form url.Values) {
	@{{.GoTableName}}Shell() {
		@{{.GoTableName}}ListView(resp,path,form)
	}
}

templ {{.GoTableName}}ListView(resp *api.List{{.GoTableName}}sResp,path string,form url.Values) {
	@ui.PaginationView(
		"{{.GoTableName}}", path, form, http.CaculatePaginator(resp.GetPage(), resp.GetPageSize(), resp.GetTotalCount())) {
  <table>
    <tr>
  {{- range $index,$field := .Fields }}
  <th>{{$field.GoColumnName}}</th>
  {{- end}}
    </tr>
		for idx,a :=range resp.Get{{.GoTableName}}s() {
			@{{.GoTableName}}ItemView(idx, a)
		}
  </table>
  }
}

templ {{.GoTableName}}ItemView(idx int, a *api.{{.GoTableName}}) {
	<tr id={ fmt.Sprintf("{{.GoTableName}}Item_%d", idx) }>
		{{- range $index,$field := .Fields}}
     <td>{fmt.Sprintf("%v",a.{{$field.GoColumnName}})}</td>
    {{- end}}
	</tr>
}

templ {{.GoTableName}}DetailPage(a *api.{{.GoTableName}}) {
	@{{.GoTableName}}Shell() {
		@{{.GoTableName}}DetailView(a)
	}
}

templ {{.GoTableName}}DetailView(a *api.{{.GoTableName}}) {
	
  {{- range $index,$field := .Fields }}
  <div>
  <lable for="{{$field.GoColumnName}}">{{$field.GoColumnName}}:</lable>
  <div>{fmt.Sprintf("%v", a.{{$field.GoColumnName}}) }</div>
  </div>
  {{- end}}
}

templ {{.GoTableName}}CreatePage() {
	@{{.GoTableName}}Shell() {
		@{{.GoTableName}}CreateView()
	}
}

templ {{.GoTableName}}CreateView() {
	<form
		hx-boost="true"
    {{- if eq $protopkg ""}}
		hx-put="/{{.GoTableName}}Service/Create{{.GoTableName}}"
		{{- else}}

		hx-put="/{{$protopkg}}.{{.GoTableName}}Service/Create{{.GoTableName}}"
{{- end}}
    hx-target="this"
		hx-swap="outerHTML"
	>
  <div>
  <lable for="{{.PrimaryKey.GoColumnName}}">{{.PrimaryKey.GoColumnName}}</lable>
		<input type="{{.PrimaryKey.HTMLInputType}}" id="{{.PrimaryKey.GoColumnName}}" name="{{.PrimaryKey.GoColumnName}}" disabled/>
</div>
	 {{- range $index,$field := .Fields }}
   {{- if eq $field.IsPrimaryKey false}} 
    <div>
			<lable for="{{$field.GoColumnName}}">{{$field.GoColumnName}}:</lable>
			{{- if eq $field.HTMLInputType "select"}}
      <select 	
        id="{{$field.GoColumnName}}"
				name="{{$field.GoColumnName}}"
      >
         {{- range $key,$val := $field.EnumValues}}
            <option value="{{$key}}">{{$val}}</option>
         {{- end}}
      </select>

      {{- else}}
      <input
				type="{{$field.HTMLInputType}}"
				id="{{$field.GoColumnName}}"
				name="{{$field.GoColumnName}}"
			/>
      {{- end}}
		</div>
    {{- end}}
    {{- end}}
		<input type="submit" value="submit"/>
	</form>
}

templ {{.GoTableName}}UpdatePage(a *api.{{.GoTableName}}) {
	@{{.GoTableName}}Shell() {
		@{{.GoTableName}}UpdateView(a)
	}
}

templ {{.GoTableName}}UpdateView(a *api.{{.GoTableName}}) {
	<form
		hx-boost="true"
    {{- if eq $protopkg ""}}
		hx-post={ "/{{.GoTableName}}Service/Update{{.GoTableName}}?{{.GoTableName}}.{{.PrimaryKey.GoColumnName}}=" + fmt.Sprintf("%d",a.{{.PrimaryKey.GoColumnName}}) }
		{{- else}}
    hx-post={ "/{{$protopkg}}.{{.GoTableName}}Service/Update{{.GoTableName}}?{{.GoTableName}}.{{.PrimaryKey.GoColumnName}}=" + fmt.Sprintf("%d",a.{{.PrimaryKey.GoColumnName}}) }

    {{- end}}
    hx-target="this"
		hx-swap="outerHTML"
	>
		<div>
			<lable for="{{.GoTableName}}.{{.PrimaryKey.GoColumnName}}">{{.PrimaryKey.GoColumnName}}:</lable>
			<input
				disabled
				type="{{.PrimaryKey.HTMLInputType}}"
				id="{{.GoTableName}}.{{.PrimaryKey.GoColumnName}}"
				name="{{.GoTableName}}.{{.PrimaryKey.GoColumnName}}"
				value={ fmt.Sprintf("%d",a.{{.PrimaryKey.GoColumnName}}) }
			/>
		</div>  
	 {{- range $index,$field := .Fields }}
   {{- if eq $field.IsPrimaryKey false}} 
    <div>
			<lable for="{{$tableName}}.{{$field.GoColumnName}}">{{$field.GoColumnName}}:</lable>
			{{- if eq $field.HTMLInputType "select"}}
      <select 	
        id="{{$tableName}}.{{$field.GoColumnName}}"
				name="{{$tableName}}.{{$field.GoColumnName}}"
				value={ fmt.Sprintf("%v",a.{{$field.GoColumnName}}) }
				hx-on:change="document.getElementById('{{$tableName}}.{{$field.GoColumnName}}.Mask').checked = true;"
      >
         {{- range $key,$val := $field.EnumValues}}
         if a.{{$field.GoColumnName}} == {{$key}}{
            <option value="{{$key}}" selected>{{$val}}</option>
         }else{
            <option value="{{$key}}">{{$val}}</option>
         }
         {{- end}}
      </select>

      {{- else}}
      <input
				type="{{$field.HTMLInputType}}"
				id="{{$tableName}}.{{$field.GoColumnName}}"
				name="{{$tableName}}.{{$field.GoColumnName}}"
				value={ fmt.Sprintf("%v",a.{{$field.GoColumnName}}) }
				hx-on:change="document.getElementById('{{$tableName}}.{{$field.GoColumnName}}.Mask').checked = true;"
			/>
      {{- end}}
		</div>
	{{- end }}
  {{- end}}
		<input type="submit" value="submit"/>

	{{- range $index,$field := .Fields }}
  {{- if eq $field.IsPrimaryKey false}} 
		<input type="checkbox" value="{{Incr $index}}" hidden id="{{$tableName}}.{{$field.GoColumnName}}.Mask" name="Masks"/>
	{{- end}}
  {{- end}}
	</form>
}
